// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  posts Post[]
  Like  Like[]
}

model Post {
  id      Int    @id @default(autoincrement())
  title   String
  content String @db.Text
  // status    PostStatus @default(PUBLISHED)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Optional fields
  imageUrl String?

  // Metrics
  viewCount Int @default(0)

  userId Int
  // Relations
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  // For soft delete
  deletedAt DateTime?
  Like      Like[]

  @@index([userId])
  @@index([createdAt])
  @@map("posts")
}

model Like {
  id     Int @id @default(autoincrement())
  userId Int
  postId Int

  emoji String? @default("üëç") // New field for storing emojis with default thumbs up

  // Relations
  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, postId])
  @@map("likes")
}
