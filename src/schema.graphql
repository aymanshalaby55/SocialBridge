# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserDto {
  id: ID!
  email: String!
  name: String!
  password: String!
  posts: [PostDto!]
  friends: [FriendDto!]
  likes: [LikeDto!]
  comments: [CommentDto!]
}

type PostDto {
  id: Int!
  title: String!
  content: String!
  imageUrl: String
  viewCount: Int
  userId: Int!
  comments: [CommentDto!]
  likes: [LikeDto!]
}

type CommentDto {
  id: ID!
  content: String!
  createdAt: DateTime!
  editedAt: DateTime
  isEdited: Boolean
  userId: Float!
  postId: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LikeDto {
  id: ID!
  emoji: String
  createdAt: DateTime!
  updatedAt: DateTime
  userId: Int!
  postId: Int!
}

type FriendDto {
  id: ID!
  userId: Int!
  friendUserId: Int!
  status: String!
  createdAt: DateTime!
}

type Query {
  healthCheck: String!
  protectedRoute: String!
  getPostsByUser: [PostDto!]!
  getUser(userId: Int!): UserDto!
  getUsers: [UserDto!]!
  getLikesByPost(postId: Int!): [LikeDto!]!
  getLikesByUser: [LikeDto!]!
  getLikeById(likeId: Int!): LikeDto!
  comments(userId: Int!): [CommentDto!]!
  comment(id: Int!): CommentDto!
  getUserFriends: [FriendDto!]!
}

type Mutation {
  login(loginInput: LoginInput!): String!
  signup(signupInput: SignupInput!): String!
  createPost(CreatePostInput: CreatePostInput!): PostDto!
  updatePost(postId: Int!, UpdatePostInput: CreatePostInput!): PostDto!
  deletePost(postId: Int!): Boolean!
  getPostById(postId: Int!): PostDto!
  updateUserProfile(userProfileUpdates: UpdateUserInput!): UserDto!
  deleteUser: Boolean!
  createLike(likeInput: UserLikesInput!): LikeDto!
  updateLikeEmoji(likeInput: UserLikesInput!): LikeDto!
  deleteLike(likeId: Int!): LikeDto!
  deleteLikeByUserAndPost(postId: Int!): LikeDto!
  createComment(createCommentInput: CreateCommentInput!): CommentDto!
  updateComment(updateCommentInput: UpdateCommentInput!): CommentDto!
  deleteComment(id: Int!): Boolean!
  addFriend(targetId: Int!): FriendDto!
  rejectFriendRequest(friendId: Int!): FriendDto!
  acceptFriendRequest(friendId: Int!): FriendDto!
}

input LoginInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  password: String!
  confirmPassword: String!
  name: String!
}

input CreatePostInput {
  title: String!
  content: String!
  imageUrl: String
}

input UpdateUserInput {
  name: String
  password: String
}

input UserLikesInput {
  postId: Int!
  emoji: String
}

input CreateCommentInput {
  content: String!
  postId: Int!
}

input UpdateCommentInput {
  content: String!
  postId: Int!
  commentId: Int
}